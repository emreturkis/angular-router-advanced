{"name":"Angular-router-advanced","tagline":"AngularJS router implemtation that supports url building and language - AngularJS için dil destekli ve geri çevrilebilir url servisi","body":"angular-router-advanced\r\n=======================\r\n\r\nAngularJS, geri çevrilebilir ve dil destekli URL yönlendirmesini desteklememektedir. Bu da çok dilli AngularJS uygulamaları yazmayı zorlaştırmaktadır. `angular-router-advanced` servisi her view için birden fazla dil destekleyen URL tanımlaması yapma imkanı veren ve bu URL'leri kolayca üreterek HTML içinde kullanmayı sağlayan bir Angular provider'ıdır.\r\n\r\n## Kurulum\r\n\r\n`angular-router-advanced` servisini kullanabilmek için Github depomuzdaki `router.js` dosyasını HTML dokümanınıza eklemeniz ve Angular modülünüze `sahibinden.router` adıyla bağımlılık olarak bildirmeniz yeterlidir.\r\n\r\n```html\r\n<html>\r\n    <head>\r\n        <script src=\"angular.js\"></script>\r\n        <script src=\"router.js\"></script>\r\n    </head>\r\n    ...\r\n```\r\n\r\n```js\r\nvar app = angular.module('myApp', ['sahibinden.router']);\r\n```\r\n\r\n## Kullanım\r\n\r\nAngularJS modülünüze config metoduyla aşağıdaki şekilde URL konfigürasyonunuzu girebilirsiniz:\r\n\r\n```js\r\nvar myApp = angular.module('myApp', ['sahibinden.router'])\r\n\r\n.config(function ($routeProvider, $locationProvider, saRouterProvider) {\r\n    'use strict';\r\n\r\n    // Url routing icin html5 pushstate kullan\r\n    $locationProvider.html5Mode(true);\r\n\r\n    // Url tanimlamalari\r\n    saRouterProvider.when('my_messages_detail', {\r\n            'tr': '/mesajlarim/detay/:id',\r\n            'en': '/messages/detail/:idd'\r\n        }, {\r\n            controller: 'MyAccountMessageDetailCtrl',\r\n            templateUrl: '/views/myAccount/messageDetail/MyAccountMessageDetail.html'\r\n        })\r\n\r\n        .when('my_messages', {\r\n            'tr': '/mesajlarim',\r\n            'en': '/messages'\r\n        }, {\r\n            controller: 'MyAccountMessagesCtrl',\r\n            templateUrl: '/views/myAccount/messages/MyAccountMessages.html'\r\n        })\r\n\r\n        .when('my_account_home', {\r\n            'tr': '/',\r\n            'en': '/home'\r\n        }, {\r\n            controller: 'MyAccountDashboardCtrl',\r\n            templateUrl: '/views/myAccount/dashboard/MyAccountDashboard.html'\r\n        })\r\n\r\n        .otherwise({\r\n            redirectTo : '/'\r\n        })\r\n\r\n        .install($routeProvider);\r\n\r\n});\r\n```\r\n\r\nBurada her bir view için Türkçe ve İngilizce URL tanımlamaları girdik. Bu kurallara göre kullanıcı `/mesajlarim` sayfasına girdiğinde `MyAccountMessages.html` dokümanı `MyAccountMessagesCtrl` adlı controller ile çalıştırılacaktır. Controller içerisinde dil değişkeni `$rootScope`'dan `lang` değeri ile okunabilir:\r\n\r\n```js\r\nmyApp.controller('MyAccountMessagesCtrl', function ($scope, $rootScope) {\r\n    $scope.welcomeMessage = 'Welcome!';\r\n\r\n    if ($rootScope.lang == 'tr') {\r\n        $scope.welcomeMessage = 'Hoşgeldiniz!';\r\n    }\r\n});\r\n```\r\n\r\nSayfalara bağlantı verirken URL'leri elle yazmak yerine `route` adı ile dinamik olarak URL üretmek mümkündür:\r\n\r\n```html\r\n<a ng-href=\"{{ url('my_messages') }}\">Mesajlarim</a>\r\n```\r\n\r\nEğer URL konfigürasyonunda dinamik değerler varsa bunlar url fonksiyonuna 2. parametrede nesne olarak gönderilebilir:\r\n\r\n```html\r\n<ul>\r\n    <li ng-repeat=\"message in messages\">\r\n        <a ng-href=\"{{ url('my_messages_detail', { id: message.id }) }}\" ng-bind=\"message.subject\"></a>\r\n    </li>\r\n</ul>\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}